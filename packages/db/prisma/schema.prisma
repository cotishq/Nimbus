// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
 
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id        String     @id @default(uuid())
  email     String     @unique
  password  String     
  name      String
  rooms     Room[]
  chats     Chat[]
  reactions Reaction[]
  lastSeen  DateTime   @default(now())
  isOnline  Boolean    @default(false)
}

model Room{
  id        Int      @id @default(autoincrement())
  slug      String   @unique
  name      String?
  createdAt DateTime @default(now())
  adminId   String
  admin     User     @relation(fields: [adminId], references: [id])
  chats     Chat[]
  isPrivate Boolean  @default(false)
}

model Chat {
  id        Int      @id @default(autoincrement())
  roomId    Int
  message   String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  room      Room     @relation(fields: [roomId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  edited    Boolean  @default(false)
  reactions Json?
}

model Reaction {
  id        Int      @id @default(autoincrement())
  messageId Int
  userId    String
  emoji     String
  message   Chat     @relation(fields: [messageId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  
  @@unique([messageId, userId, emoji])
}